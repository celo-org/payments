{"components":{"schemas":{"JsonRpcProtocol":{"type":"object","required":["id","jsonrpc"],"properties":{"id":{"type":"integer","format":"int32","description":"Request ID"},"jsonrpc":{"type":"string","default":"2.0","description":"JSON-RPC Version (2.0)"}}},"JsonRpcRequired":{"allOf":[{"$ref":"#/components/schemas/JsonRpcProtocol"},{"type":"object","required":["method"],"properties":{"method":{"type":"string","description":"Method name"}}}]},"JsonRpcSuccessResponse":{"type":"object","required":["id","jsonrpc","result"],"properties":{"id":{"type":"integer","format":"int32","description":"Request ID"},"jsonrpc":{"type":"string","default":"2.0","description":"JSON-RPC Version (2.0)"},"result":{"type":"null"}}},"JsonRpcErrorResponse":{"allOf":[{"$ref":"#/components/schemas/JsonRpcProtocol"},{"type":"object","required":["error"],"properties":{"error":{"$ref":"#/components/schemas/JsonRpcError"}}}]},"Any":{"description":"something"},"JsonRpcError":{"type":"object","required":["code"],"properties":{"code":{"type":"integer","minimum":-32700,"maximum":-32000,"format":"int32"},"message":{"type":"string"},"data":{"$ref":"#/components/schemas/Any"}}},"JsonRpcInvalidRequestError":{"type":"object","properties":{"code":{"type":"integer","format":"int32","enum":[-32600],"description":"Invalid request"},"message":{"type":"string"},"data":{"$ref":"#/components/schemas/Any"}},"required":["code"]},"JsonRpcInvalidRequestErrorResponse":{"allOf":[{"$ref":"#/components/schemas/JsonRpcErrorResponse"},{"type":"object","properties":{"error":{"allOf":[{"$ref":"#/components/schemas/JsonRpcInvalidRequestError"}]}},"required":["error"]}]},"JsonRpcMethodNotFoundError":{"type":"object","properties":{"code":{"type":"integer","format":"int32","enum":[-32601],"description":"Method not found"},"message":{"type":"string"},"data":{"$ref":"#/components/schemas/Any"}},"required":["code"]},"JsonRpcMethodNotFoundErrorResponse":{"allOf":[{"$ref":"#/components/schemas/JsonRpcErrorResponse"},{"type":"object","properties":{"error":{"$ref":"#/components/schemas/JsonRpcMethodNotFoundError"}},"required":["error"]}]},"JsonRpcInvalidParameterError":{"type":"object","properties":{"code":{"type":"integer","format":"int32","enum":[-32602],"description":"Invalid method parameter(s)"},"message":{"type":"string"},"data":{"$ref":"#/components/schemas/Any"}},"required":["code"]},"JsonRpcInvalidParameterErrorResponse":{"allOf":[{"$ref":"#/components/schemas/JsonRpcErrorResponse"},{"type":"object","properties":{"error":{"$ref":"#/components/schemas/JsonRpcInvalidParameterError"}},"required":["error"]}]},"JsonRpcUnspecifiedError":{"type":"object","properties":{"code":{"type":"integer","format":"int32","enum":[-32000],"description":"Unspecified error\n"},"message":{"type":"string"},"data":{"$ref":"#/components/schemas/Any"}},"required":["code"]},"JsonRpcUnspecifiedErrorResponse":{"allOf":[{"$ref":"#/components/schemas/JsonRpcErrorResponse"},{"type":"object","properties":{"error":{"$ref":"#/components/schemas/JsonRpcUnspecifiedError"}},"example":{"code":-32000,"message":"Unspecified error","data":{"referenceId":"5a655425-1d30-4e39-bd26-6b02875f2f0d"}},"required":["error"]}]},"JsonRpcReferenceIdNotFoundError":{"type":"object","properties":{"code":{"type":"integer","format":"int32","enum":[-32001],"description":"The reference id provided in the request was not found\n"},"message":{"type":"string"},"data":{"$ref":"#/components/schemas/Any"}},"required":["code"]},"JsonRpcReferenceIdNotFoundErrorResponse":{"allOf":[{"$ref":"#/components/schemas/JsonRpcErrorResponse"},{"type":"object","properties":{"error":{"$ref":"#/components/schemas/JsonRpcReferenceIdNotFoundError"}},"example":{"code":-32001,"message":"The reference id provided in the request was not found","data":{"referenceId":"5a655425-1d30-4e39-bd26-6b02875f2f0d"}},"required":["error"]}]},"JsonRpcRiskChecksFailedError":{"type":"object","properties":{"code":{"type":"integer","format":"int32","enum":[-32002],"description":"The risk checks did not pass successfully\n"},"message":{"type":"string"},"data":{"$ref":"#/components/schemas/Any"}},"required":["code"]},"JsonRpcRiskChecksFailedErrorResponse":{"allOf":[{"$ref":"#/components/schemas/JsonRpcErrorResponse"},{"type":"object","properties":{"error":{"$ref":"#/components/schemas/JsonRpcRiskChecksFailedError"}},"example":{"code":-32002,"message":"The risk checks did not pass successfully","data":{"reason":"Sanctions list"}},"required":["error"]}]},"JsonRpcMissingInformationError":{"type":"object","properties":{"code":{"type":"integer","format":"int32","enum":[-32003],"description":"A mandatory field or element are missing from the request\n"},"message":{"type":"string"},"data":{"$ref":"#/components/schemas/Any"}},"required":["code"]},"JsonRpcMissingInformationErrorResponse":{"allOf":[{"$ref":"#/components/schemas/JsonRpcErrorResponse"},{"type":"object","properties":{"error":{"$ref":"#/components/schemas/JsonRpcMissingInformationError"}},"example":{"code":-32003,"message":"A mandatory field or element are missing from the request","data":{"missingFields":["phoneNumber"]}},"required":["error"]}]},"JsonRpcPaymentTypeMismatchError":{"type":"object","properties":{"code":{"type":"integer","format":"int32","enum":[-32004],"description":"Consumer tried to invoke an action that is irrelevant for the payment type\n"},"message":{"type":"string"},"data":{"$ref":"#/components/schemas/Any"}},"required":["code"]},"JsonRpcPaymentTypeMismatchErrorResponse":{"allOf":[{"$ref":"#/components/schemas/JsonRpcErrorResponse"},{"type":"object","properties":{"error":{"$ref":"#/components/schemas/JsonRpcPaymentTypeMismatchError"}},"example":{"code":-32004,"message":"Consumer tried to invoke an action that is irrelevant for the payment type","data":{"requestedAction":"capture"}},"required":["error"]}]},"JsonRpcInvalidCommandTypeError":{"type":"object","properties":{"code":{"type":"integer","format":"int32","enum":[-32005],"description":"When trying to invoke an action out of its expected order (e.g. The wallet invoked ReadyForSettlement before payment was initialized)\n"},"message":{"type":"string"},"data":{"$ref":"#/components/schemas/Any"}},"required":["code"]},"JsonRpcInvalidCommandTypeErrorResponse":{"allOf":[{"$ref":"#/components/schemas/JsonRpcErrorResponse"},{"type":"object","properties":{"error":{"$ref":"#/components/schemas/JsonRpcInvalidCommandTypeError"}},"example":{"code":-32005,"message":"ReadyForSettlement sent before payment was initialized"},"required":["error"]}]},"JsonRpcInvalidSignatureError":{"type":"object","properties":{"code":{"type":"integer","format":"int32","enum":[-32006],"description":"Signature header missing or could not be verified\n"},"message":{"type":"string"},"data":{"$ref":"#/components/schemas/Any"}},"required":["code"]},"JsonRpcInvalidSignatureErrorResponse":{"allOf":[{"$ref":"#/components/schemas/JsonRpcErrorResponse"},{"type":"object","properties":{"error":{"$ref":"#/components/schemas/JsonRpcInvalidSignatureError"}},"example":{"code":-32006,"message":"Signature header missing or could not be verified"},"required":["error"]}]},"ReferenceId":{"type":"string","description":"Unique reference ID of this payment. This value should be globally unique","format":"uuid"},"GetPaymentInfo":{"allOf":[{"$ref":"#/components/schemas/JsonRpcRequired"},{"$ref":"#/components/schemas/GetPaymentInfoRequest"}]},"GetPaymentInfoParams":{"title":"Parameters","type":"object","required":["referenceId"],"properties":{"referenceId":{"$ref":"#/components/schemas/ReferenceId"}}},"GetPaymentInfoRequest":{"type":"object","required":["method","params"],"properties":{"method":{"type":"string","description":"Method name","enum":["getPaymentInfo"]},"params":{"$ref":"#/components/schemas/GetPaymentInfoParams"}}},"GetPaymentInfoResponse":{"allOf":[{"$ref":"#/components/schemas/JsonRpcSuccessResponse"},{"type":"object","required":["result"],"properties":{"result":{"$ref":"#/components/schemas/PaymentInfo"}}}]},"PaymentInfo":{"type":"object","properties":{"requiredPayerData":{"$ref":"#/components/schemas/RequiredPayerData"},"receiver":{"$ref":"#/components/schemas/ReceiverData"},"action":{"$ref":"#/components/schemas/PaymentAction"},"referenceId":{"$ref":"#/components/schemas/ReferenceId"},"description":{"type":"string","description":"Description of the payment. To be displayed to the customer","example":"payment request description"}},"required":["action","receiver","referenceId"]},"RequiredAddressData":{"type":"object","description":"Defines which elements of the payer address data are required for this payment.\nThe absence of properties indicates their optionality (default to false)\n","properties":{"city":{"type":"boolean"},"country":{"type":"boolean"},"line1":{"type":"boolean"},"line2":{"type":"boolean"},"postalCode":{"type":"boolean"},"state":{"type":"boolean"}}},"Address":{"type":"object","properties":{"city":{"type":"string","example":"San Francisco","description":"The city, district, suburb, town, or village"},"country":{"type":"string","example":"US","minLength":2,"maxLength":3,"description":"Two-letter (ISO 3166-1 country code)[https://en.wikipedia.org/wiki/ISO_3166-1]"},"line1":{"type":"string","example":"1260 Market Street","description":"Address line 1"},"line2":{"type":"string","example":"Suite 450","description":"Address line 2 - apartment, unit, etc."},"postalCode":{"type":"string","example":"94103","description":"ZIP or postal code"},"state":{"type":"string","example":"CA","description":"State, county, province, region"}}},"RequiredNationalIdData":{"type":"object","description":"Defines which elements of the payer national ID data are required for this payment.\nThe absence of properties indicates their optionality (default to false)\n","properties":{"idValue":{"type":"boolean"},"country":{"type":"boolean"},"type":{"type":"boolean"}}},"NationalIdData":{"type":"object","properties":{"idValue":{"type":"string","description":"Indicates the national ID value - for example, a social security number"},"country":{"type":"string","minLength":2,"maxLength":2,"description":"Two-letter (ISO country code)[https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2]"},"type":{"type":"string","description":"Indicates the type of the ID"}}},"RequiredPayerData":{"type":"object","description":"Defines which elements of the payer data are required for this payment.\nThe absence of properties indicates their optionality (default to false)\n","properties":{"givenName":{"type":"boolean"},"surname":{"type":"boolean"},"phoneNumber":{"type":"boolean"},"address":{"$ref":"#/components/schemas/RequiredAddressData"},"nationalIdData":{"$ref":"#/components/schemas/RequiredNationalIdData"}}},"PayerData":{"type":"object","properties":{"givenName":{"type":"string","description":"Given name of the payer"},"surname":{"type":"string","description":"Surname of the payer"},"phoneNumber":{"type":"string","description":"Phone number of the payer"},"address":{"$ref":"#/components/schemas/Address"},"nationalIdData":{"$ref":"#/components/schemas/NationalIdData"}}},"BusinessData":{"type":"object","required":["name","legalName","address"],"description":"Includes the details of the merchant to be displayed to the payer","properties":{"name":{"type":"string","example":"Acme","description":"Merchant's display name. Should be recognizable by the payer"},"legalName":{"type":"string","example":"Acme Technologies Inc.","description":"The legal entity name"},"imageUrl":{"type":"string","format":"url","description":"URL with the business logo","example":"https://upload.wikimedia.org/wikipedia/commons/thumb/5/5e/Acme_Markets_lolo.svg/1200px-Acme_Markets_lolo.svg.png"},"address":{"$ref":"#/components/schemas/Address"}}},"ReceiverData":{"type":"object","required":["accountAddress","businessData"],"description":"The details of the payment receiver (e.g. merchant)","properties":{"accountAddress":{"type":"string","format":"hex","description":"The blockchain address of the receiver account","example":"0x9A648e76bCa0Bc3A0Ac44C37Db6Af133B57b8896"},"businessData":{"$ref":"#/components/schemas/BusinessData"}}},"PaymentAction":{"type":"object","required":["amount","currency","action","timestamp"],"description":"Information regarding the type of payment and payment amount","properties":{"amount":{"oneOf":[{"type":"integer","minimum":0,"format":"uint64","example":452,"description":"Amount of the transfer. Base units are the same as for on-chain transactions for this currency."},{"type":"string","example":"100000000000000000","description":"A string representation of the Amount of the transfer. Base units are the same as for on-chain transactions for this currency. Strings should be used only for BigNumbers"}]},"currency":{"type":"string","enum":["cUSD"],"default":"cUSD","description":"One of the supported on-chain currency types, e.g. cUSD. At the moment, cUSD is the only allowed value."},"action":{"type":"string","enum":["charge"],"default":"charge","description":"This value indicates the requested action to perform. At the moment, charge is the only allowed value."},"timestamp":{"type":"integer","minimum":0,"format":"uint32","description":"Unix timestamp indicating the time that the payment was created"}}},"InitCharge":{"allOf":[{"$ref":"#/components/schemas/JsonRpcRequired"},{"$ref":"#/components/schemas/InitChargeRequest"}]},"InitChargeParams":{"title":"Parameters","type":"object","required":["sender","referenceId","transactionHash"],"properties":{"sender":{"$ref":"#/components/schemas/PaymentSender"},"referenceId":{"$ref":"#/components/schemas/ReferenceId"},"transactionHash":{"type":"string","format":"hex","description":"Transaction hash (pre-calculated), in Hex format"}}},"InitChargeRequest":{"type":"object","required":["method","params"],"properties":{"method":{"type":"string","description":"Method name","enum":["initCharge"]},"params":{"$ref":"#/components/schemas/InitChargeParams"}}},"PaymentSender":{"type":"object","description":"Minimal payer information required","required":["accountAddress","payerData"],"properties":{"accountAddress":{"type":"string","format":"hex","description":"Address of the customer/wallet"},"payerData":{"$ref":"#/components/schemas/PayerData"}}},"InitChargeResponse":{"allOf":[{"$ref":"#/components/schemas/JsonRpcSuccessResponse"}]},"ReadyForSettlement":{"allOf":[{"$ref":"#/components/schemas/JsonRpcRequired"},{"$ref":"#/components/schemas/ReadyForSettlementRequest"}]},"ReadyForSettlementParams":{"title":"Parameters","type":"object","required":["referenceId"],"properties":{"referenceId":{"$ref":"#/components/schemas/ReferenceId"}}},"ReadyForSettlementRequest":{"type":"object","required":["method","params"],"properties":{"method":{"type":"string","description":"Method name","enum":["readyForSettlement"]},"params":{"$ref":"#/components/schemas/ReadyForSettlementParams"}}},"ReadyForSettlementResponse":{"allOf":[{"$ref":"#/components/schemas/JsonRpcSuccessResponse"}]},"Abort":{"allOf":[{"$ref":"#/components/schemas/JsonRpcRequired"},{"$ref":"#/components/schemas/AbortRequest"}]},"AbortCodes":{"type":"string","enum":["general","customer_declined","insufficient_funds","could_not_put_transaction","business_not_verified"]},"AbortParams":{"title":"Parameters","type":"object","required":["referenceId"],"properties":{"referenceId":{"$ref":"#/components/schemas/ReferenceId"},"abortCode":{"$ref":"#/components/schemas/AbortCodes"},"abortMessage":{"type":"string","description":"a descriptive message regarding the root cause for the abortion"}}},"AbortRequest":{"type":"object","required":["method","params"],"properties":{"method":{"type":"string","description":"Method name","enum":["abort"]},"params":{"$ref":"#/components/schemas/AbortParams"}}},"AbortResponse":{"allOf":[{"$ref":"#/components/schemas/JsonRpcSuccessResponse"}]}}}}